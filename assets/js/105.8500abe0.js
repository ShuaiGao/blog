(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{432:function(s,n,a){"use strict";a.r(n);var e=a(4),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_1-stackless-的安装和使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-stackless-的安装和使用"}},[s._v("#")]),s._v(" 1. stackless 的安装和使用")]),s._v(" "),n("p",[s._v("stackless 在 python 库中没有默认包含，可以使用 pip 安装，但由于版本原因可能会安装失败。可以使用 pypy 版本的 python，pypy 默认集成了 stackless 库。 https://www.pypy.org/download.html 其他一些安装使用等，可以参照 github 上的说明 https://github.com/stackless-dev/stackless")]),s._v(" "),n("p",[s._v("stackless 可以理解为一个无栈的任务调度处理，那 stackless 就应该描述成一个无栈调用＋协程调度。")]),s._v(" "),n("h1",{attrs:{id:"_2-stackless-的-hello-world"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-stackless-的-hello-world"}},[s._v("#")]),s._v(" 2. stackless 的 hello world")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import stackless\n\ndef fun(n):\n    print n\n    stackless.schedule()\n    print n\n    stackless.schedule()\n\nstackless.tasklet(fun)(3)\nstackless.tasklet(fun)(5)\nstackless.run()\n## 执行输出\n# 3\n# 5\n# 3\n# 5\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("stackless 通过调用 run 函数启动，通过调用 tasklet 函数增加一个任务。在 stackless 启动后遇到 schedule 调用时当前任务将转向下一个可调用 tasklet 执行。在 stackless 内部会自动维护一个调度队列，以保证调度的顺序。")]),s._v(" "),n("h1",{attrs:{id:"_3-看一个复杂点的例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-看一个复杂点的例子"}},[s._v("#")]),s._v(" 3. 看一个复杂点的例子")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import stackless\n\nchannel = stackless.channel()\n\ndef producer():\n    print "producer started."\n    for i in range(5):\n        channel.send(i)\n    print "producer finished."\n\ndef consumer():\n    print "consumer start. "\n    while True:\n        data = channel.receive()\n        print "consumer data: " + str(data)\n        if data == 4:\n            break\n    print "consumer finished "\n\n\nstackless.tasklet(producer)()\nstackless.tasklet(consumer)()\nstackless.run()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("这是一个生产者与消费者的例子，它使用 channel 在不同的 tasklet 间通信。当程序执行到 send 和 receive 时，会向 channel 写入消息，并且执行 schedule 调用。")]),s._v(" "),n("h1",{attrs:{id:"_4-再看一个复杂点的例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-再看一个复杂点的例子"}},[s._v("#")]),s._v(" 4. 再看一个复杂点的例子")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("#-*- coding:utf-8 -*-\nimport stackless\nimport random\nimport sys\n\nclass hackysacker:\n    counter = 0\n    def __init__(self,name,circle):\n        self.name = name\n        self.circle = circle\n        circle.append(self)\n        self.channel = stackless.channel()\n\n        stackless.tasklet(self.messageLoop)()\n\n    def incrementCounter(self):\n        hackysacker.counter += 1\n        if hackysacker.counter >= turns: # 当循环到达限制，退出\n            while self.circle: # 向每个channel发送 exit\n                self.circle.pop().channel.send('exit')\n\n    def messageLoop(self):\n        while 1:\n            message = self.channel.receive() # 等待消息的到来\n            if message == 'exit':\n                return\n            debugPrint(\"%s got hackeysack from %s\" % (self.name, message.name))\n            kickTo = self.circle[random.randint(0,len(self.circle)-1)]\n            while kickTo is self:\n                kickTo = self.circle[random.randint(0,len(self.circle)-1)]\n            debugPrint(\"%s kicking hackeysack to %s\" % (self.name, kickTo.name))\n            self.incrementCounter()\n            kickTo.channel.send(self) # 向kickTo channel 发送消息，消息参数是self\n\ndef debugPrint(x):\n    if debug:print x\n\ndebug = 5\nhackysackers = 5\nturns = 1\n\ndef runit(hs=5,ts=5,dbg=1):\n    global hackysackers,turns,debug\n    hackysackers = hs\n    turns = ts\n    debug = dbg\n\n    hackysacker.counter = 0\n    circle = []\n    one = hackysacker('1',circle)\n\n    for i in range(hackysackers):\n        hackysacker(`i`,circle)\n\n    one.channel.send(one)\n\n    try:\n        stackless.run()\n    except TaskletExit:\n        pass\n\nif __name__ == \"__main__\":\n    runit()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br")])]),n("p",[s._v("例子来源于网络，该例中每个 hackysacker 会持有一个 tasklet，并且 hackysacker 对象会监听一个特定的 channel，所有的 tasklet 对象会存储在 circle 列表中，并且每个 tasklet 对象持有 circle 列表的引用。循环调用中，每个 tasklet 会随机选择一个 channel，向其发送消息。分片调度")])])}),[],!1,null,null,null);n.default=t.exports}}]);