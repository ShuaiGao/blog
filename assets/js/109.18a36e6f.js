(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{435:function(n,s,a){"use strict";a.r(s);var e=a(4),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("在 C++中 new 在申请内存失败时默认会抛出一个 std::bad_alloc 异常。")]),n._v(" "),s("p",[n._v("所以，按照 C++标准，如果想检查 new 是否成功，则应该通过 try catch 捕捉异常。")]),n._v(" "),s("p",[n._v("但有些编译器不支持 try catch。")]),n._v(" "),s("p",[n._v("用户一般简单地使用”new(std::nothrow) 类型”。")]),n._v(" "),s("p",[n._v("new 在分配内存失败时会抛出异常，\n而”new(std::nothrow)”在分配内存失败时会返回一个空指针")]),n._v(" "),s("p",[n._v("对已存在的指针，通过 new 调用类构造函数")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("#include <iostream>\n#include <cstdlib>\n\nclass C{\n    public:\n        C(int _x):x(_x){}\n        int x;\n};\n\nint main(void)\n{\n    C* ptr =(C*)malloc(sizeof(C));\n    (void)new(ptr) C(4);\n    cout<<ptr->x<<endl;\n    return 0;\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("p",[n._v("定位 new 表达式\n语法如下")]),n._v(" "),s("div",{staticClass:"language-c++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("new (place_address) type\nnew (place_address) type(initializers)\nnew (place_address) type [size]\nnew (place_address) type [size]{braced initializer list}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("该用法不分配任何内存，它只是简单地返回指针实参，然后有 new 表达式负责在指定的地址初始化对象以完成整个工作。即定位 new 允许我们再一个特定的、预先分配的地址上构造对象。\n用法示例")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("char buff[100];\nint *p;\np = new(buff) int[20]; //p指向一个长度为20的int数组\n\nchar buff1[4];\nint *p1=new(buff1)int\nint *p2=new(buff1)int(0) //以上两种调用都可以\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);